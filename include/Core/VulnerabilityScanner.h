#pragma once
#include <vector>
#include <memory>
#include <string>
#include "Core/Vulnerability.h"
#include "Analyzers/BaseAnalyzer.h"

class VulnerabilityScanner {
private:
    std::vector<std::shared_ptr<BaseAnalyzer>> analyzers;
    std::vector<Vulnerability> vulnerabilities;

public:
    VulnerabilityScanner() = default;

    void registerAnalyzer(std::shared_ptr<BaseAnalyzer> analyzer);
    bool scanFile(const std::string& filePath);
    int scanDirectory(const std::string& directoryPath, bool recursive = false);
    const std::vector<Vulnerability>& getVulnerabilities() const;
};